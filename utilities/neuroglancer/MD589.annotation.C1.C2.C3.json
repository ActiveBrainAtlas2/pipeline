{
  "dimensions": {
    "x": [
      4.6e-7,
      "m"
    ],
    "y": [
      4.6e-7,
      "m"
    ],
    "z": [
      0.00002,
      "m"
    ]
  },
  "position": [
    15196.5830078125,
    5833.72900390625,
    106.25415802001953
  ],
  "crossSectionScale": 24.046753552064512,
  "projectionOrientation": [
    0.07122226804494858,
    0.13091008365154266,
    0.00842598732560873,
    0.9887967109680176
  ],
  "projectionScale": 50279.60913761768,
  "layers": [
    {
      "type": "image",
      "source": {
        "url": "precomputed://https://activebrainatlas.ucsd.edu/data/MD589/neuroglancer_data/C1",
        "transform": {
          "matrix": [
            [
              0.5,
              0,
              0,
              4100
            ],
            [
              0,
              0.5,
              0,
              300
            ],
            [
              0,
              0,
              1,
              0
            ]
          ],
          "outputDimensions": {
            "x": [
              4.6e-7,
              "m"
            ],
            "y": [
              4.6e-7,
              "m"
            ],
            "z": [
              0.00002,
              "m"
            ]
          }
        }
      },
      "opacity": 0.33,
      "shader": "#uicontrol float min slider(min=0, max=1, default=0)\n#uicontrol float max slider(min=0, max=1, default=1)\n#uicontrol float invert slider(min=0, max=1, default=0, step=1)\n#uicontrol float brightness slider(min=-1, max=1)\n#uicontrol float contrast slider(min=-3, max=3, step=0.01)\nvoid main() {\n  float pix_val = toNormalized(getDataValue());\n  if(pix_val < min){\n  \tpix_val = 0.0;\n  }\n  if(pix_val > max){\n    pix_val = 1.0;\n  }\n\n  if(invert==1.0){\n  \t  emitGrayscale((1.0 -(pix_val - brightness)) *\n       exp(contrast));\n  }\n  else{\n    emitGrayscale((pix_val + brightness) *\n                  exp(contrast));\n  }\n\n}\n\n",
      "shaderControls": {
        "brightness": 0.22,
        "contrast": -0.24
      },
      "name": "C1"
    },
    {
      "type": "segmentation",
      "source": {
        "url": "precomputed://https://activebrainatlas.ucsd.edu/data/MD589/neuroglancer_data/annotations",
        "transform": {
          "matrix": [
            [
              0.5,
              0,
              0,
              13959.57411798619
            ],
            [
              0,
              0.5,
              0,
              3430.561200606595
            ],
            [
              0,
              0,
              0.5,
              40
            ]
          ],
          "outputDimensions": {
            "x": [
              4.6e-7,
              "m"
            ],
            "y": [
              4.6e-7,
              "m"
            ],
            "z": [
              0.00002,
              "m"
            ]
          }
        }
      },
      "tab": "source",
      "name": "precomputed_volume"
    },
    {
      "type": "image",
      "source": {
        "url": "precomputed://https://activebrainatlas.ucsd.edu/data/MD589/neuroglancer_data/C2",
        "transform": {
          "matrix": [
            [
              0.5,
              0,
              0,
              4100
            ],
            [
              0,
              0.5,
              0,
              300
            ],
            [
              0,
              0,
              1,
              0
            ]
          ],
          "outputDimensions": {
            "x": [
              4.6e-7,
              "m"
            ],
            "y": [
              4.6e-7,
              "m"
            ],
            "z": [
              0.00002,
              "m"
            ]
          }
        }
      },
      "shader": "#uicontrol float min slider(min=0, max=1, default=0)\n#uicontrol float max slider(min=0, max=1, default=1)\n#uicontrol float invert slider(min=0, max=1, default=0, step=1)\n#uicontrol float brightness slider(min=-1, max=1)\n#uicontrol float contrast slider(min=-3, max=3, step=0.01)\nvoid main() {\n  float pix_val = toNormalized(getDataValue());\n  if(pix_val < min){\n  \tpix_val = 0.0;\n  }\n  if(pix_val > max){\n    pix_val = 1.0;\n  }\n\n  if(invert==1.0){\n\n  \t  emitRGB(vec3((1.0 -(pix_val - brightness)) *\n       exp(contrast),0,0));\n  }\n  else{\n    emitRGB(vec3((pix_val + brightness) *\n                  exp(contrast),0,0));\n  }\n\n}\n",
      "shaderControls": {
        "brightness": -0.26,
        "contrast": -1.4
      },
      "name": "C2"
    },
    {
      "type": "image",
      "source": {
        "url": "precomputed://https://activebrainatlas.ucsd.edu/data/MD589/neuroglancer_data/C3",
        "transform": {
          "matrix": [
            [
              0.5,
              0,
              0,
              4100
            ],
            [
              0,
              0.5,
              0,
              300
            ],
            [
              0,
              0,
              1,
              0
            ]
          ],
          "outputDimensions": {
            "x": [
              4.6e-7,
              "m"
            ],
            "y": [
              4.6e-7,
              "m"
            ],
            "z": [
              0.00002,
              "m"
            ]
          }
        }
      },
      "shader": "#uicontrol float min slider(min=0, max=1, default=0)\n#uicontrol float max slider(min=0, max=1, default=1)\n#uicontrol float invert slider(min=0, max=1, default=0, step=1)\n#uicontrol float brightness slider(min=-1, max=1)\n#uicontrol float contrast slider(min=-3, max=3, step=0.01)\nvoid main() {\n  float pix_val = toNormalized(getDataValue());\n  if(pix_val < min){\n  \tpix_val = 0.0;\n  }\n  if(pix_val > max){\n    pix_val = 1.0;\n  }\n\n  if(invert==1.0){\n\n  \t  emitRGB(vec3(0,(1.0 -(pix_val - brightness)) *\n       exp(contrast),0));\n  }\n  else{\n    emitRGB(vec3(0,(pix_val + brightness) *\n                  exp(contrast),0));\n  }\n\n}\n",
      "shaderControls": {
        "brightness": -0.76,
        "contrast": 0.53
      },
      "name": "C3"
    }
  ],
  "selectedLayer": {
    "layer": "C1",
    "visible": true,
    "size": 504
  },
  "layout": "4panel"
}